extends layout/common.jade

block content
    #first-page.clearfix
        .intro-wrap(style="vertical-align: middle;display:table-cell")
            h1.heading 你好!
            .content(style="display: none;")
                p 很高兴遇见你
                p
                    span: a(href="mailto:guiqi.zh@gmail.com").fa.fa-envelope
                    span: a(href="https://github.com/somonus", target="_blank").fa.fa-github
            .scroll-label
                i.fa.fa-angle-double-down
    #second-page.clearfix
        .intro-wrap
            h1 我的经历
        .experience-wrap.clearfix(init="false")
            #experienceTimeLine
    #third-page.clearfix
        .intro-wrap
            h1 我的技能
            .content
                p 主要技能点有数据可视化，前端，nodejs后端，APP客户端，3D渲染
        .skill-wrap.clearfix.container(init="false")
            .legend
                ul.skillsList
                    li: button.btn(style="background:#998566;") 3D
                    li: button.btn(style="background:#88B8E6;") Common
                    li: button.btn(style="background:#97BE0D;") APP
                    li: button.btn(style="background:#D84F5F;") FE-Basic
                    li: button.btn(style="background:#998566;") FE-Advanced
            #skillChart
    #fourth-page.clearfix
        .intro-wrap.container
            h1 我的项目
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 天猫精灵小程序
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 针对天猫精灵日益旺盛的开放需求，引擎支付宝小程序作为底层支撑，在上层封装天猫精灵的小程序开放方案。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 针对天猫精灵不同屏幕尺寸，不同类型设备，封装跨度小程序方案，使得同一个小程序工程可以编译出不同UI，不同功能的多端产物，复用能复用的UI和逻辑。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 借助rax的跨容器能力，将天猫精灵小程序编译为H5页面，用于输出给合作伙伴中午小程序容器的app使用，如移动，电信。'

            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 天猫精灵node server
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 推动天猫精灵微服务架构，使用nodejs作为BFF层为前端及客户端封装业务接口。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 推出UI 中心，对天猫精灵带屏设备语音链路的UI相关逻辑做处理，对于不同的语音指令返回不同的UI内容展示。'
            
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 天猫精灵APP
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 支撑天猫精灵APP内部和外投业务。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 提供天猫精灵APP内统一对外开放方案，支持三方厂商在安全范围内入驻。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 上层语法使用rax，底层渲染引擎替换为weex，将原来react-native相关逻辑迁移到weex，和集团生态打通。'

            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong AR SDK
                tr: td.projectTd
                    i.fa.fa-star
                    !=' AR SDK主要分为两个部分，跟踪和渲染。我负责AR SDK中渲染部分工作。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 底层使用OpenGL封装一个轻量级渲染引擎，打包后大小200k，能够渲染视频和图片。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 借助assimp解析3d模型，结合自己封装的渲染引擎，能够渲染常见格式的3d模型，并支持骨骼动画。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈：OpenGL + assimp + c++'
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 阿里小朋
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装DA部门react-native应用框架,封装ios原生组件暴露给react-native使用。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 通过rnpm管理react-native组件，并通过prepublish脚本来将cocoapods于rnpm有机结合。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 在原生ios应用中引入react-native页面，使用object-c和react-native的方式混合开发，性能比传统html5混合开发方式有大幅提升。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 使用封装的DARN框架开发阿里小朋APP，底层为react-native。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装声波配网及wifi配网等需要跟硬件配合的组件，并暴露接口给react-native使用。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装react-native-router用于在react-native场景替代react-router。使用方式与react-router保持基本一致。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈：react-native + redux + redux-saga + reselect + java + object-c + c++'
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 知识图谱可视化
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 对巨量数据进行可视化展示，对知识图谱的实体和关系进行合理描述。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 使用echarts绘制整体形状，使用zrender进行个性化需求。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈：react+redux+react-router+webpack+ES6+echarts+zrender'
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 纸蜻蜓
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 使用object-c开发纸蜻蜓ios应用。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装大图查看ios组件。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装扩展ios原生组件，以满足项目需求。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 使用autolayout布局，通过AOP方式对控件打点。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 使用cocoapods管理组件依赖，并将抽离组件发布为私有cocoapods组件。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈：object-c+masonry+cocoapods'
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong react-echarts
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装react版本的echarts。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 其他组件state修改时保证echarts不会二次渲染，提升性能。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 支持简单使用options的方式，及标准react component的方式。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 能够暴露echarts对象来进行个性化编程。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈：react+echarts+ES6+webpack+babel+npm'
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong cuz-components
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 封装react版本基础组件组件。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 组件包含：分页组件，多级菜单，日历，按钮，弹框等。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈：react+ES6+webpack+babel+npm'

            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong chrome插件开发
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 开发chrome插件，辅助爬虫系统。通过点击获取页面中任一个元素的xpath，和爬虫系统打通快速定位需要爬取的内容。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 修改右击菜单，能够一次同时选中所有同级元素。'

            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong actionJS
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 改变前端初始化方式，通过给dom元素添加属性来初始化功能。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 根据指定的属性，按需加载对应css及js。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈为requirejs + jquery'
            table.projectTable
                th(colspan="2")
                    i.fa.fa-archive
                    strong 服装搭配编辑器
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 开发服装搭配编辑器，用户可在网站对服装图片进行编辑，包括裁剪，旋转，拖动，改变层级等。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 编辑好之后可生成一张新的图片。'
                tr: td.projectTd
                    i.fa.fa-star
                    !=' 技术栈为 grunt + seajs + jquery。'
            .connect
                div markdown版本简历点击
                    a(href='https://github.com/somonus/somonus.github.io/blob/master/README.md') 这里
                div 联系方式：guiqi.zh@gmail.com
            .scroll-back
                i.fa.fa-angle-double-up



